class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        
        vector<vector<int>> ans;
        
        //Base Case 1
        if(numRows == 1){
           vector<int> temp;
            temp.push_back(1);
            ans.push_back(temp);
            return ans;
        }
        
        //Base Case 2
        if(numRows == 2){
            vector<int> temp1;
            temp1.push_back(1);
            ans.push_back(temp1);
            vector<int> temp;
            temp.push_back(1);
            temp.push_back(1);
            ans.push_back(temp);
            return ans;
        }
        
        //Recursive Calls
        vector<vector<int>> ansRecurs = generate(numRows-1);
        vector<int> tempRecurs = ansRecurs.back();
        vector<int> newAns;
        for(int i = 0; i <= tempRecurs.size(); i++){
            if(newAns.size() == 0){
                newAns.push_back(tempRecurs[i]);
            }
            else if(tempRecurs.size() == i){
                 newAns.push_back(tempRecurs[i-1]);
            }
            else{
                newAns.push_back(tempRecurs[i-1]+tempRecurs[i]);
            }
        }
        
        ansRecurs.push_back(newAns);
        return ansRecurs;
    }
};
