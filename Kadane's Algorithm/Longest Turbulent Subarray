Time Complexity: O(N)
Space Complexity: O(1)

class Solution {
public:
    int maxTurbulenceSize(vector<int>& arr) {
        int n = arr.size();
        if(n < 2){
            return n;
        }
        
        int prevSign = arr[1]-arr[0];
        int currLen = prevSign==0?1:2;
        int maxLen = currLen;
        
        for(int i = 1; i < n-1; i++){
            int currSign = arr[i+1]-arr[i];
            if(prevSign>0 != currSign>0 && prevSign!= 0 && currSign != 0){
                currLen++;
            }
            else{
                currLen = currSign==0?1:2;
            }
            maxLen = max(maxLen, currLen);
            prevSign = currSign;
        }
        return maxLen;
    }
};
