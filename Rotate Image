Time Complexity: O(N^2)
Space Complexity: O(1)
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        //Firstly reverse rows from Top to down to bring diagonal elements at their position after rotation
        reverse(matrix.begin(), matrix.end());
        
        //Now swap the symmetrical elements assuming this diagonal as mirror
        for(int i = 0; i < matrix.size(); i++){
            for(int j = i+1; j < matrix[i].size(); j++){
                swap(matrix[i][j], matrix[j][i]);
            }
        }
    }
};
